// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=load, sel=address[0..1], a=lA, b=lB, c=lC, d=lD);
    RAM4K(in=in, load=lA, address=address[2..13], out=outA);
    RAM4K(in=in, load=lB, address=address[2..13], out=outB);
    RAM4K(in=in, load=lC, address=address[2..13], out=outC);
    RAM4K(in=in, load=lD, address=address[2..13], out=outD);
    Mux4Way16(a=outA, b=outB, c=outC, d=outD, sel=address[0..1], out=out);
}
