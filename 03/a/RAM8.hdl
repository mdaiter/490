// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way16(in=in, sel=address, a=rA, b=rB, c=rC, d=rD, e=rE, f=rF, g=rG, h=rH);
    DMux8Way(in=load, sel=address, a=lA, b=lB, c=lC, d=lD, e=lE, f=lF, g=lG, h=lH);
    Register(in=rA, load=lA, out=outA);
    Register(in=rB, load=lB, out=outB);
    Register(in=rC, load=lC, out=outC);
    Register(in=rD, load=lD, out=outD);
    Register(in=rE, load=lE, out=outE);
    Register(in=rF, load=lF, out=outF);
    Register(in=rG, load=lG, out=outG);
    Register(in=rH, load=lH, out=outH);
    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address, out=out);
}
